= content_for :title, "Edit Selected Locations"

.block
  .block_head
    %h2 Update Locations
  .block_content
    #portlets
      .portlet.map
        .portlet-header.fixed.ui-widget-header.ui-corner-top
          Map
          %span{:style=>"float: right; display: none"}
            = link_to "Save", "#"
            |
            = link_to "Cancel", "#"
        .portlet-content.nopadding
          #mappanel{:style=>"height: 311px; width: 100%"}
      .clear
      .portlet.ui.widget.ui-widget-content.ui-helper-clearfix.ui-corner-all
        .portlet-header.fixed.ui-widget-header.ui-corner-top
          Details
          %span{:style=>"float: right"}
            = link_to "Add Category", "#/category/add"
            |
            = link_to "Remove Category", "#/category/remove"
            |
            = link_to "Change Status", "#/status/change"
            |
            = link_to "Add Comment", "#/comment/add"
        .portlet-content.nopadding
          = form_for "locations", :url => "/locations", :html=>{:method=>:put} do |form|
            %table.list.updates
              %thead
                %tr
                  %th
                    %input{:type=>"checkbox"}
                  %th Name
                  %th Long Name
                  %th Status
                  %th City
                  %th Categories
                  %th Comments
              %tbody
              - @locations.each_with_index do |location, i|
                %tr{"data-id"=>location.id}
                  %td.selector
                    %input{:type=>"checkbox"}
                  %td.name= form.text_field "[#{i}][name]", :value => location.name
                  %td.long_name= form.text_field "[#{i}][long_name]", :value => location.long_name
                  %td.status
                    =select_tag "locations[#{i}][status]", options_for_select(workflow_actions(current_user, location), location.status)
                    =form.hidden_field "[#{i}][id]", :value => location.id
                  %td
                    = select_tag "locations[#{i}][city_id]", options_for_select([""] + City.dropdown_items, location.city_id), :style=>"width: 150px"
                    = location.city_id
                  %td.tags
                    %span.list
                      = render :partial => "tags/collection", :locals => {:items => location.tags.map {|c| {:name => c.category.french, :delete_link => location_tag_url(c.location_id, c.id)}}}
                    = link_to "(+)", "#/category/single/#{location.id}"
                  %td.comments
                    = link_to location.comments.count, "#/comments/single/#{location.id}", :class => "comment_count"
            #actions{:style=>"text-align: right; margin-right: 15px; margin-bottom: 20px; width: 100%"}
              = submit_tag "Confirm Changes", :class => "button mid", :style => "position: relative; left: 20px"
            .clear
            %br

:javascript
  var featureStore, saveStrategy;

  (function($) {
    $(".map.portlet").locations_collection_edit_map({locations: #{@locations.map{|l| l.id}}});
    $(".coordinates.portlet").locations_collection_edit_coordinates();
    $("table.list.updates").checkboxes();

    _.each(#{@locations_cache}, function(value) {
      Location.add(new Location(value));
    })

    _.each(#{@comments_cache}, function(value) {
      Comment.add(new Comment(value));
    })

    Comment.bind("add", function(new_comment) {
      console.debug("Updating comments for" + new_comment.attr("location_id"));
      var counter = $('tr[data-id=' + new_comment.attr("location_id") + '] a.comment_count');
      counter.text(parseInt(counter.text()) + 1);
    })

    var app = Sammy(function() {

      this.selected_locations = [];

      this.use(Sammy.StatusWidget, #{workflow_actions(current_user, nil)});
      this.use(Sammy.CategoryWidget, #{@categories});
      this.use(Sammy.FaceboxWidget);
      this.use(Sammy.MultiSelectorWidget, $("table.list.updates"));
      this.use(Sammy.CommentWidget);

      this.get("#/", function(context) {
        this.closeFacebox();
      })

      this.get("#/cancel", function(context) {
        context.redirect("#/");
      })

      this.get("#/comments/accept", function(context) {
        this.acceptComment(context, context.app.selected_locations);
      });

      this.get("#/comments/single/:location_id", function(context) {
        var location_id = context.params['location_id'];
        context.uncheckAll();
        context.select(location_id);
        this.showCommentWidget(context, location_id);
      });

      this.get("#/category/single/:location_id", function(context) {
        var location_id = context.params['location_id'];
        context.uncheckAll();
        context.select(location_id);
        this.showCategoryWidget(context, "#/category/add/accept", "Add Category", "add_tag");
      });

      this.get("#/comment/add", function(context) {
        if (_.isEmpty(context.app.selected_locations)) return this.showSelectionError("#");
        this.showCommentWidget(context, null);
      });

      this.get('#/category/add', function(context) {
        if (_.isEmpty(context.app.selected_locations)) return this.showSelectionError("#");
        this.showCategoryWidget(context, "#/category/add/accept", "Add Category", "add_tag");
      });

      this.get('#/category/remove', function(context) {
        if (_.isEmpty(context.app.selected_locations)) return this.showSelectionError("#");
        this.showCategoryWidget(context, "#/category/remove/accept", "Remove Category", "remove_tag");
      });

      this.get('#/status/change', function(context) {
        if (_.isEmpty(context.app.selected_locations)) return this.showSelectionError("#");
        this.showStatusWidget(context);
      });

      this.get('#/status/change/accept', function(context) {
        this.changeStatus(context, context.app.selected_locations);
        context.redirect("#/");
      });

      this.get('#/category/add/accept', function(context) {
        var target = function(id) {
          return context.getRow(id).find("span.list");
        };
        this.addCategory(context, context.app.selected_locations, target);
        context.redirect("#/");
      });

      this.get('#/category/remove/accept', function(context) {
        this.removeCategory(context, context.app.selected_locations);
        context.redirect("#/");
      });

    });

    $(function() {
      app.run('#/');
    });

  })(jQuery);



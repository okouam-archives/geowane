= content_for :title, "Edit Selected Locations"
.block
  .block_head
    %h2 Update Locations
    %ul
      %li.nobg= link_to "Add Category", "#/category/add"
      %li.nobg= link_to "Remove Category", "#/category/remove"
      %li.nobg= link_to "Change Status", "#/status/change"
    %span
      For selected locations only
  .block_content
    %table.layout
    = form_for "locations", :url => "/locations", :html=>{:method=>:put} do |form|
      %table.list.updates
        %thead
          %tr
            %th
              %input{:type=>"checkbox"}
            %th Name
            %th Long Name
            %th Status
            %th Categories
            %th Comments
        %tbody 
        - @locations.each_with_index do |location, i|
          %tr{"data-id"=>location.id}
            %td.selector
              %input{:type=>"checkbox"}
            %td.name= form.text_field "[#{i}][name]", :value => location.name
            %td.long_name= form.text_field "[#{i}][long_name]", :value => location.long_name
            %td.status
              =select_tag "locations[#{i}][status]", options_for_select(workflow_actions(current_user, location), location.status)
              =form.hidden_field "[#{i}][id]", :value => location.id
            %td.tags              
              %span.list
                = render :partial => "tags/collection", :locals => {:items => location.tags.map {|c| {:name => c.category.french, :delete_link => location_tag_url(c.location_id, c.id)}}}
              = link_to "(+)", new_location_tag_url(location), :rel => "facebox"
            %td.comments
              = link_to "(+)", "#"
              = link_to location.comments.count, "#"

      %div{:style=>"text-align: right; margin-right: 15px; margin-bottom: 20px"}
        = submit_tag "Confirm Changes", :class => "button mid", :style => "position: relative; left: 20px"

  %script#category-widget{:type=>"text/html"}
    = select_tag("category_id", options_for_select(@categories), :class => "styled_select")
    %a.accept{:href=>"#"} Accept
    %a.cancel{:href=>"#"} Cancel

  %script#comments-widget{:type=>"text/html"}
    - @locations.each do |location|
      %div{"data-parent" => location.id, :id => "comments_for_" + location.id.to_s}
        - location.comments.each do |item|
          %h4= "#{item.user.login} | #{item.created_at.strftime("%e %B %Y")} @ #{item.created_at.strftime("%H:%M %p")}"
          %p= item.comment

  %script#status-widget{:type=>"text/html"}
    = select_tag "status_switcher", options_for_select(workflow_actions(current_user, nil).insert(0, "")), :class => "styled_select"
    %a.accept{:href=>"#"} Accept
    %a.cancel{:href=>"#"} Cancel

  %script#comments-widget{:type=>"text/html"}
    %textarea
    %a{:href=>"#"} Add Comment

:javascript
  $(document).ready(function() {

    $("td.comments a").click(function() {
      location_id = $(this).parents("tr").data("id");
      var comments = $('div[data-parent=' + location_id + "]");
      jQuery.facebox({div: "#" + comments.attr("id")});
      $('#facebox_overlay').click(function() { $(document).trigger('close.facebox') });
      var overlayContent = $("#facebox .content");
      overlayContent
        .addClass("comments-widget")
        .append($("#comments-widget").html())
        .find("a").click(function() {
          var counter = $("#comments_for_" + location_id);
          var old_count = parseInt(counter.html());
          counter.text(old_count + 1);
        });
    });

  });

  (function($) {

    var app = Sammy('.collection_edit', function() {

      this.use(Sammy.StatusWidget, "status-widget");
      this.use(Sammy.CategoryWidget, "category-widget");
      this.use(Sammy.MultiSelectorWidget, ".list.updates");

      this.get('#/category/add', function() {
        var items = this.getSelected();
        if (items.length == 0)
          return this.showSelectionError("#");
        var self = this;
        this.showCategoryWidget("Add Category", "add_tag", function(data) {
          debugger;
          $.each(data, function(index, item) {self.addTag(item)})
        }, items, self.getSelectedCategory);
      });

      this.get('#/category/remove', function() {
        var items = this.getSelected();
        if (items.length == 0)
          return this.showSelectionError("#");
        var self = this;
        this.showCategoryWidget("Remove Category", "remove_tag", function(data) {
          $.each(data, function(index, item) {self.removeTag(item)})
        }, items, self.getSelectedCategory);
      });

      this.get('#/status/change', function() {
        var items = this.getSelected();
        if (items.length == 0)
          return this.showSelectionError("#");
        this.showStatusWidget(function() {
          $(document).trigger('close.facebox');
        });
      });

    });

    $(function() {
      app.run('#/');
    });

  })(jQuery);


